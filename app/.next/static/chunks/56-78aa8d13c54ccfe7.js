(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[56],{289:(e,t,a)=>{"use strict";async function n(e,t,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{skipPreflight:!1,preflightCommitment:"confirmed"};try{if(!a.publicKey||!a.signTransaction)throw Error("Wallet not connected");let{blockhash:r}=await e.getLatestBlockhash();t.recentBlockhash=r,t.feePayer=a.publicKey;let i=await a.signTransaction(t),s=await e.sendRawTransaction(i.serialize(),n),o=await e.confirmTransaction(s,"confirmed");if(o.value.err)throw Error("Transaction failed: ".concat(o.value.err));return{signature:s,success:!0}}catch(a){console.error("Transaction failed:",a);let e=a instanceof Error?a.message:String(a),t=e.includes("User rejected")||e.includes("user rejected")||e.includes("cancelled")||e.includes("4001")||e.includes("denied by user")||e.includes("Transaction was not confirmed");return{signature:"",success:!1,error:e,userRejected:t}}}a.d(t,{D:()=>n})},711:e=>{"use strict";e.exports=JSON.parse('{"address":"AQehvXopTZuh9qT3jdZ8L1RZumq1eqhmLAM6avWNNJte","metadata":{"name":"squad","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"claim_token","discriminator":[116,206,27,191,166,19,0,73],"accounts":[{"name":"claimer","writable":true,"signer":true},{"name":"config","writable":true,"pda":{"seeds":[{"kind":"const","value":[67,79,78,70,73,71]},{"kind":"arg","path":"group_name"}]}},{"name":"group_token_mint","writable":true},{"name":"claimer_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"claimer"},{"kind":"account","path":"token_program"},{"kind":"account","path":"group_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"group_name","type":"string"}]},{"name":"initialize","discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"fee_and_rent_payer","writable":true,"signer":true},{"name":"main_signing_authority","signer":true},{"name":"config","writable":true,"pda":{"seeds":[{"kind":"const","value":[67,79,78,70,73,71]},{"kind":"arg","path":"name"}]}},{"name":"group_token_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[103,114,111,117,112,95,116,111,107,101,110]},{"kind":"arg","path":"name"}]}},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"name","type":"string"},{"name":"members","type":{"vec":"pubkey"}}]}],"accounts":[{"name":"GroupConfigAccount","discriminator":[161,44,109,29,159,109,42,243]}],"events":[{"name":"InitializeGroupEvent","discriminator":[45,69,172,111,173,156,97,173]}],"errors":[{"code":6000,"name":"InvalidMainSigningAuthority","msg":"Invalid main signing authority"},{"code":6001,"name":"InvalidSigningAuthority","msg":"Invalid signing authority"},{"code":6002,"name":"InvalidBackAuthority","msg":"Invalid back authority"},{"code":6003,"name":"ValueIsZero","msg":"Value is zero"},{"code":6004,"name":"InvalidLength","msg":"Invalid length"},{"code":6005,"name":"InvalidPercentage","msg":"Invalid percentage"},{"code":6006,"name":"InvalidPaymentSupply","msg":"Invalid payment supply"},{"code":6007,"name":"GroupTokenDisable","msg":"Group token disable"},{"code":6008,"name":"UserAccountDisable","msg":"User account disable"},{"code":6009,"name":"UserIndexAccountDisable","msg":"User index account disable"},{"code":6010,"name":"InvalidUserIndex","msg":"Invalid user index"},{"code":6011,"name":"InvalidConvertAmount","msg":"Invalid convert amount"},{"code":6012,"name":"InvalidGenerateAmount","msg":"Invalid generate amount"},{"code":6013,"name":"CannotClaim","msg":"Cannot claim"},{"code":6014,"name":"InvalidTokenAccountAuthority","msg":"Invalid token account authority"},{"code":6015,"name":"InvalidTokenAmountForClaimRequest","msg":"Invalid token amount for claim request"},{"code":6016,"name":"AlreadyClaimed","msg":"Already claimed"},{"code":6017,"name":"NotAGroupMember","msg":"Not a group member"}],"types":[{"name":"GroupConfigAccount","type":{"kind":"struct","fields":[{"name":"last_block_timestamp","docs":["timestamp when account updated"],"type":"i64"},{"name":"name","docs":["group name"],"type":"string"},{"name":"main_signing_authority","docs":["program main signing authority"],"type":"pubkey"},{"name":"members","docs":["group members"],"type":{"vec":"pubkey"}},{"name":"group_token_mint","docs":["group token mint address"],"type":"pubkey"},{"name":"claimed_members","docs":["members who have claimed their tokens"],"type":{"vec":"pubkey"}}]}},{"name":"InitializeGroupEvent","type":{"kind":"struct","fields":[{"name":"timestamp","type":"i64"},{"name":"name","type":"string"},{"name":"members","type":{"vec":"pubkey"}},{"name":"group_token_mint","type":"pubkey"}]}}]}')},1112:function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){void 0===n&&(n=a);var r=Object.getOwnPropertyDescriptor(t,a);(!r||("get"in r?!t.__esModule:r.writable||r.configurable))&&(r={enumerable:!0,get:function(){return t[a]}}),Object.defineProperty(e,n,r)}:function(e,t,a,n){void 0===n&&(n=a),e[n]=t[a]}),r=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||n(t,e,a)},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.SquadProjectSDK=void 0;let s=a(9345),o=a(1664),m=a(7542),d=a(3721),c=i(a(711)),u=i(a(8088));class l{constructor(e,t,a){this.connection=e,this.squad=t,this.task=a}static async init(e){let t,{connection:a,provider:n}=e,r=e.squadProgramId||new s.PublicKey(c.default.address),i=e.taskProgramId||new s.PublicKey(u.default.address);t=n||{connection:a,publicKey:s.PublicKey.default};let g=new o.Program(c.default,t),p=new o.Program(u.default,t);return new l(a,new m.SquadSDK(g,r),new d.TaskSDK(p,i))}static getDefaultProgramIds(){return{squad:new s.PublicKey(c.default.address),task:new s.PublicKey(u.default.address)}}}t.SquadProjectSDK=l,t.default=l,r(a(7542),t),r(a(3721),t)},3721:(e,t,a)=>{"use strict";var n=a(5539).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.TaskSDK=void 0;let r=a(9345);class i{constructor(e,t){this.program=e,this.programId=t}getGlobalConfigPDA(){return r.PublicKey.findProgramAddressSync([n.from("global_config")],this.programId)}getTaskConfigPDA(e){return r.PublicKey.findProgramAddressSync([n.from("task"),n.from(e)],this.programId)}getTaskVaultPDA(e){return r.PublicKey.findProgramAddressSync([n.from("task_vault"),n.from(e)],this.programId)}async initialize(e){let[t]=this.getGlobalConfigPDA();return await this.program.methods.initialize().accounts({globalConfig:t,admin:e.admin,systemProgram:r.SystemProgram.programId}).transaction()}async createTask(e){let[t]=this.getTaskConfigPDA(e.name),[a]=this.getTaskVaultPDA(e.name);return await this.program.methods.createTask(e.name,e.lockedAmount).accounts({taskConfig:t,creator:e.creator,taskVault:a,systemProgram:r.SystemProgram.programId}).transaction()}async submitRewardDistribution(e){let[t]=this.getTaskConfigPDA(e.taskName);return await this.program.methods.submitRewardDistribution(e.taskName,e.recipients,e.amounts).accounts({taskConfig:t,creator:e.creator}).transaction()}async claimReward(e){let[t]=this.getTaskConfigPDA(e.taskName),[a]=this.getTaskVaultPDA(e.taskName);return await this.program.methods.claimReward(e.taskName).accounts({taskConfig:t,taskVault:a,claimer:e.claimer,systemProgram:r.SystemProgram.programId}).transaction()}async getGlobalConfig(){let[e]=this.getGlobalConfigPDA();try{return await this.program.account.globalConfig.fetch(e)}catch{return null}}async getTaskConfig(e){let[t]=this.getTaskConfigPDA(e);try{return await this.program.account.taskConfig.fetch(t)}catch{return null}}getGlobalConfigAddress(){let[e]=this.getGlobalConfigPDA();return e}getTaskConfigAddress(e){let[t]=this.getTaskConfigPDA(e);return t}getTaskVaultAddress(e){let[t]=this.getTaskVaultPDA(e);return t}}t.TaskSDK=i},5332:()=>{},7542:(e,t,a)=>{"use strict";var n=a(5539).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.SquadSDK=void 0;let r=a(9345),i=a(8994);class s{constructor(e,t){this.program=e,this.programId=t}getConfigPDA(e){return r.PublicKey.findProgramAddressSync([n.from("CONFIG"),n.from(e)],this.programId)}getGroupTokenMintPDA(e){return r.PublicKey.findProgramAddressSync([n.from("group_token"),n.from(e)],this.programId)}async initialize(e){let[t]=this.getConfigPDA(e.name),[a]=this.getGroupTokenMintPDA(e.name);return await this.program.methods.initialize(e.name,e.members).accounts({feeAndRentPayer:e.feeAndRentPayer,mainSigningAuthority:e.mainSigningAuthority,config:t,groupTokenMint:a,tokenProgram:i.TOKEN_PROGRAM_ID,associatedTokenProgram:i.ASSOCIATED_TOKEN_PROGRAM_ID,systemProgram:r.SystemProgram.programId,rent:r.SYSVAR_RENT_PUBKEY}).transaction()}async claimToken(e){let[t]=this.getConfigPDA(e.groupName),[a]=this.getGroupTokenMintPDA(e.groupName),n=await (0,i.getAssociatedTokenAddress)(a,e.claimer);return await this.program.methods.claimToken(e.groupName).accounts({claimer:e.claimer,config:t,groupTokenMint:a,claimerTokenAccount:n,tokenProgram:i.TOKEN_PROGRAM_ID,associatedTokenProgram:i.ASSOCIATED_TOKEN_PROGRAM_ID,systemProgram:r.SystemProgram.programId}).transaction()}async getGroupConfig(e){let[t]=this.getConfigPDA(e);try{return await this.program.account.groupConfigAccount.fetch(t)}catch{return null}}getConfigAddress(e){let[t]=this.getConfigPDA(e);return t}getGroupTokenMintAddress(e){let[t]=this.getGroupTokenMintPDA(e);return t}}t.SquadSDK=s},8088:e=>{"use strict";e.exports=JSON.parse('{"address":"5168hBAt3ZMd4QMnaRCHYAZCzN1Sv4qfzAWdKkbDzcSZ","metadata":{"name":"task","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"claim_reward","discriminator":[149,95,181,242,94,90,158,162],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"task_name"}]}},{"name":"task_vault","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107,95,118,97,117,108,116]},{"kind":"arg","path":"task_name"}]}},{"name":"claimer","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"task_name","type":"string"}]},{"name":"create_task","discriminator":[194,80,6,180,232,127,48,171],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"name"}]}},{"name":"creator","writable":true,"signer":true},{"name":"task_vault","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107,95,118,97,117,108,116]},{"kind":"arg","path":"name"}]}},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"}]},{"name":"initialize","discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"global_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[103,108,111,98,97,108,95,99,111,110,102,105,103]}]}},{"name":"admin","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[]},{"name":"submit_reward_distribution","discriminator":[12,137,217,117,60,49,252,56],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"task_name"}]}},{"name":"creator","signer":true}],"args":[{"name":"task_name","type":"string"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}}]}],"accounts":[{"name":"GlobalConfig","discriminator":[149,8,156,202,160,252,176,217]},{"name":"TaskConfig","discriminator":[235,108,104,122,159,19,176,168]}],"events":[{"name":"RewardClaimed","discriminator":[49,28,87,84,158,48,229,175]},{"name":"RewardDistributionSubmitted","discriminator":[96,244,103,104,88,130,101,0]},{"name":"TaskCreated","discriminator":[49,174,6,7,71,159,69,175]}],"errors":[{"code":6000,"name":"InvalidRewardDistribution","msg":"Invalid reward distribution: sum of amounts doesn\'t match locked amount"},{"code":6001,"name":"TaskNotFound","msg":"Task not found"},{"code":6002,"name":"Unauthorized","msg":"Unauthorized: only task creator can submit reward distribution"},{"code":6003,"name":"RewardAlreadyClaimed","msg":"Reward already claimed"},{"code":6004,"name":"NotEligible","msg":"Not eligible for reward"},{"code":6005,"name":"RewardDistributionNotSubmitted","msg":"Reward distribution not submitted"}],"types":[{"name":"GlobalConfig","type":{"kind":"struct","fields":[{"name":"admin","type":"pubkey"},{"name":"bump","type":"u8"}]}},{"name":"RewardClaimed","type":{"kind":"struct","fields":[{"name":"task_name","type":"string"},{"name":"claimer","type":"pubkey"},{"name":"amount","type":"u64"}]}},{"name":"RewardDistributionSubmitted","type":{"kind":"struct","fields":[{"name":"task_name","type":"string"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}}]}},{"name":"TaskConfig","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"},{"name":"reward_distribution_submitted","type":"bool"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}},{"name":"claimed","type":{"vec":"bool"}},{"name":"bump","type":"u8"}]}},{"name":"TaskCreated","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"}]}}]}')},8545:(e,t,a)=>{"use strict";a.d(t,{C:()=>m});var n=a(7710),r=a(5331),i=a(482),s=a(4232),o=a(1112);function m(){let{connection:e}=(0,n.w)(),t=(0,r.v)();return(0,s.useMemo)(()=>{let a;return e?(t.publicKey&&t.signTransaction&&t.signAllTransactions&&(a=new i.NQ(e,{publicKey:t.publicKey,signTransaction:t.signTransaction.bind(t),signAllTransactions:t.signAllTransactions.bind(t)},{commitment:"confirmed",preflightCommitment:"confirmed"})),o.SquadProjectSDK.init({connection:e,provider:a})):null},[e,t.publicKey,t.signTransaction,t.signAllTransactions])}}}]);