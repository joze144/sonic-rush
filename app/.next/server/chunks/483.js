exports.id=483,exports.ids=[483],exports.modules={979:()=>{},1256:(a,b,c)=>{"use strict";c.a(a,async(a,d)=>{try{c.d(b,{C:()=>j});var e=c(6574),f=c(5109),g=c(2015),h=c(3876),i=a([e]);function j(){let{connection:a}=(0,e.useConnection)(),b=(0,e.useWallet)();return(0,g.useMemo)(()=>{let c;return a?(b.publicKey&&b.signTransaction&&b.signAllTransactions&&(c=new f.AnchorProvider(a,{publicKey:b.publicKey,signTransaction:b.signTransaction.bind(b),signAllTransactions:b.signAllTransactions.bind(b)},{commitment:"confirmed",preflightCommitment:"confirmed"})),h.SquadProjectSDK.init({connection:a,provider:c})):null},[a,b.publicKey,b.signTransaction,b.signAllTransactions])}e=(i.then?(await i)():i)[0],d()}catch(a){d(a)}})},2081:(a,b,c)=>{"use strict";c.a(a,async(a,d)=>{try{c.r(b),c.d(b,{default:()=>q});var e=c(8732),f=c(2015),g=c(9918),h=c.n(g),i=c(4233),j=c(6574),k=c(6234),l=c(4279),m=c(3755),n=c(8491),o=c(2893);c(979);var p=a([j,k,l,m,o]);function q({Component:a,pageProps:b}){let c=(0,i.useRouter)(),d=k.WalletAdapterNetwork.Devnet,g=(0,f.useMemo)(()=>(0,n.clusterApiUrl)(d),[d]),p=(0,f.useMemo)(()=>[new l.UnsafeBurnerWalletAdapter],[d]);return(0,e.jsx)(j.ConnectionProvider,{endpoint:g,children:(0,e.jsx)(j.WalletProvider,{wallets:p,autoConnect:!0,children:(0,e.jsxs)(m.WalletModalProvider,{children:[(0,e.jsxs)("div",{style:{minHeight:"100vh",display:"flex",flexDirection:"column",backgroundColor:"#f8f9fa"},children:[(0,e.jsxs)("header",{style:{padding:"1rem 2rem",borderBottom:"1px solid #e9ecef",backgroundColor:"white",display:"flex",justifyContent:"space-between",alignItems:"center",boxShadow:"0 2px 4px rgba(0,0,0,0.05)"},children:[(0,e.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"2rem"},children:[(0,e.jsx)(h(),{href:"/",style:{textDecoration:"none"},children:(0,e.jsx)("h1",{style:{color:"#2c3e50",cursor:"pointer",margin:0,fontSize:"1.8rem"},children:"Squad App"})}),(0,e.jsxs)("nav",{style:{display:"flex",gap:"1.5rem"},children:[(0,e.jsx)(h(),{href:"/squad",style:{textDecoration:"none",color:"/squad"===c.pathname?"#007bff":"#6c757d",fontWeight:"/squad"===c.pathname?"600":"500",fontSize:"1.1rem",padding:"0.5rem 1rem",borderRadius:"4px",transition:"all 0.2s ease"},children:"Squad"}),(0,e.jsx)(h(),{href:"/tasks",style:{textDecoration:"none",color:"/tasks"===c.pathname?"#007bff":"#6c757d",fontWeight:"/tasks"===c.pathname?"600":"500",fontSize:"1.1rem",padding:"0.5rem 1rem",borderRadius:"4px",transition:"all 0.2s ease"},children:"Tasks"})]})]}),(0,e.jsxs)("div",{style:{display:"flex",gap:"1rem",alignItems:"center"},children:[(0,e.jsx)("span",{style:{fontSize:"0.9rem",color:"#6c757d",fontWeight:"500"},children:"Devnet"}),(0,e.jsx)(m.WalletMultiButton,{}),(0,e.jsx)(m.WalletDisconnectButton,{})]})]}),(0,e.jsx)("main",{style:{flex:1,padding:"2rem"},children:(0,e.jsx)(a,{...b})})]}),(0,e.jsx)(o.Toaster,{position:"bottom-right",toastOptions:{duration:4e3,style:{background:"#363636",color:"#fff"}}})]})})})}[j,k,l,m,o]=p.then?(await p)():p,c(9324),d()}catch(a){d(a)}})},3876:function(a,b,c){"use strict";var d=this&&this.__createBinding||(Object.create?function(a,b,c,d){void 0===d&&(d=c);var e=Object.getOwnPropertyDescriptor(b,c);(!e||("get"in e?!b.__esModule:e.writable||e.configurable))&&(e={enumerable:!0,get:function(){return b[c]}}),Object.defineProperty(a,d,e)}:function(a,b,c,d){void 0===d&&(d=c),a[d]=b[c]}),e=this&&this.__exportStar||function(a,b){for(var c in a)"default"===c||Object.prototype.hasOwnProperty.call(b,c)||d(b,a,c)},f=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(b,"__esModule",{value:!0}),b.default=b.SquadProjectSDK=void 0;let g=c(5206),h=c(2150),i=c(4686),j=c(8211),k=f(c(8565)),l=f(c(8180));class m{constructor(a,b,c){this.connection=a,this.squad=b,this.task=c}static async init(a){let b,{connection:c,provider:d}=a,e=a.squadProgramId||new g.PublicKey(k.default.address),f=a.taskProgramId||new g.PublicKey(l.default.address);b=d||{connection:c,publicKey:g.PublicKey.default};let n=new h.Program(k.default,b),o=new h.Program(l.default,b);return new m(c,new i.SquadSDK(n,e),new j.TaskSDK(o,f))}static getDefaultProgramIds(){return{squad:new g.PublicKey(k.default.address),task:new g.PublicKey(l.default.address)}}}b.SquadProjectSDK=m,b.default=m,e(c(4686),b),e(c(8211),b)},4003:()=>{},4686:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.SquadSDK=void 0;let d=c(5206),e=c(8394);class f{constructor(a,b){this.program=a,this.programId=b}getConfigPDA(a){return d.PublicKey.findProgramAddressSync([Buffer.from("CONFIG"),Buffer.from(a)],this.programId)}getGroupTokenMintPDA(a){return d.PublicKey.findProgramAddressSync([Buffer.from("group_token"),Buffer.from(a)],this.programId)}async initialize(a){let[b]=this.getConfigPDA(a.name),[c]=this.getGroupTokenMintPDA(a.name);return await this.program.methods.initialize(a.name,a.members).accounts({feeAndRentPayer:a.feeAndRentPayer,mainSigningAuthority:a.mainSigningAuthority,config:b,groupTokenMint:c,tokenProgram:e.TOKEN_PROGRAM_ID,associatedTokenProgram:e.ASSOCIATED_TOKEN_PROGRAM_ID,systemProgram:d.SystemProgram.programId,rent:d.SYSVAR_RENT_PUBKEY}).transaction()}async claimToken(a){let[b]=this.getConfigPDA(a.groupName),[c]=this.getGroupTokenMintPDA(a.groupName),f=await (0,e.getAssociatedTokenAddress)(c,a.claimer);return await this.program.methods.claimToken(a.groupName).accounts({claimer:a.claimer,config:b,groupTokenMint:c,claimerTokenAccount:f,tokenProgram:e.TOKEN_PROGRAM_ID,associatedTokenProgram:e.ASSOCIATED_TOKEN_PROGRAM_ID,systemProgram:d.SystemProgram.programId}).transaction()}async getGroupConfig(a){let[b]=this.getConfigPDA(a);try{return await this.program.account.groupConfigAccount.fetch(b)}catch{return null}}getConfigAddress(a){let[b]=this.getConfigPDA(a);return b}getGroupTokenMintAddress(a){let[b]=this.getGroupTokenMintPDA(a);return b}}b.SquadSDK=f},5076:(a,b,c)=>{"use strict";async function d(a,b,c,e={skipPreflight:!1,preflightCommitment:"confirmed"}){try{if(!c.publicKey||!c.signTransaction)throw Error("Wallet not connected");let{blockhash:d}=await a.getLatestBlockhash();b.recentBlockhash=d,b.feePayer=c.publicKey;let f=await c.signTransaction(b),g=await a.sendRawTransaction(f.serialize(),e),h=await a.confirmTransaction(g,"confirmed");if(h.value.err)throw Error(`Transaction failed: ${h.value.err}`);return{signature:g,success:!0}}catch(c){console.error("Transaction failed:",c);let a=c instanceof Error?c.message:String(c),b=a.includes("User rejected")||a.includes("user rejected")||a.includes("cancelled")||a.includes("4001")||a.includes("denied by user")||a.includes("Transaction was not confirmed");return{signature:"",success:!1,error:a,userRejected:b}}}c.d(b,{D:()=>d})},8180:a=>{"use strict";a.exports=JSON.parse('{"address":"5168hBAt3ZMd4QMnaRCHYAZCzN1Sv4qfzAWdKkbDzcSZ","metadata":{"name":"task","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"claim_reward","discriminator":[149,95,181,242,94,90,158,162],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"task_name"}]}},{"name":"task_vault","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107,95,118,97,117,108,116]},{"kind":"arg","path":"task_name"}]}},{"name":"claimer","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"task_name","type":"string"}]},{"name":"create_task","discriminator":[194,80,6,180,232,127,48,171],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"name"}]}},{"name":"creator","writable":true,"signer":true},{"name":"task_vault","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107,95,118,97,117,108,116]},{"kind":"arg","path":"name"}]}},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"}]},{"name":"initialize","discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"global_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[103,108,111,98,97,108,95,99,111,110,102,105,103]}]}},{"name":"admin","writable":true,"signer":true},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[]},{"name":"submit_reward_distribution","discriminator":[12,137,217,117,60,49,252,56],"accounts":[{"name":"task_config","writable":true,"pda":{"seeds":[{"kind":"const","value":[116,97,115,107]},{"kind":"arg","path":"task_name"}]}},{"name":"creator","signer":true}],"args":[{"name":"task_name","type":"string"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}}]}],"accounts":[{"name":"GlobalConfig","discriminator":[149,8,156,202,160,252,176,217]},{"name":"TaskConfig","discriminator":[235,108,104,122,159,19,176,168]}],"events":[{"name":"RewardClaimed","discriminator":[49,28,87,84,158,48,229,175]},{"name":"RewardDistributionSubmitted","discriminator":[96,244,103,104,88,130,101,0]},{"name":"TaskCreated","discriminator":[49,174,6,7,71,159,69,175]}],"errors":[{"code":6000,"name":"InvalidRewardDistribution","msg":"Invalid reward distribution: sum of amounts doesn\'t match locked amount"},{"code":6001,"name":"TaskNotFound","msg":"Task not found"},{"code":6002,"name":"Unauthorized","msg":"Unauthorized: only task creator can submit reward distribution"},{"code":6003,"name":"RewardAlreadyClaimed","msg":"Reward already claimed"},{"code":6004,"name":"NotEligible","msg":"Not eligible for reward"},{"code":6005,"name":"RewardDistributionNotSubmitted","msg":"Reward distribution not submitted"}],"types":[{"name":"GlobalConfig","type":{"kind":"struct","fields":[{"name":"admin","type":"pubkey"},{"name":"bump","type":"u8"}]}},{"name":"RewardClaimed","type":{"kind":"struct","fields":[{"name":"task_name","type":"string"},{"name":"claimer","type":"pubkey"},{"name":"amount","type":"u64"}]}},{"name":"RewardDistributionSubmitted","type":{"kind":"struct","fields":[{"name":"task_name","type":"string"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}}]}},{"name":"TaskConfig","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"},{"name":"reward_distribution_submitted","type":"bool"},{"name":"recipients","type":{"vec":"pubkey"}},{"name":"amounts","type":{"vec":"u64"}},{"name":"claimed","type":{"vec":"bool"}},{"name":"bump","type":"u8"}]}},{"name":"TaskCreated","type":{"kind":"struct","fields":[{"name":"creator","type":"pubkey"},{"name":"name","type":"string"},{"name":"locked_amount","type":"u64"}]}}]}')},8211:(a,b,c)=>{"use strict";Object.defineProperty(b,"__esModule",{value:!0}),b.TaskSDK=void 0;let d=c(5206);class e{constructor(a,b){this.program=a,this.programId=b}getGlobalConfigPDA(){return d.PublicKey.findProgramAddressSync([Buffer.from("global_config")],this.programId)}getTaskConfigPDA(a){return d.PublicKey.findProgramAddressSync([Buffer.from("task"),Buffer.from(a)],this.programId)}getTaskVaultPDA(a){return d.PublicKey.findProgramAddressSync([Buffer.from("task_vault"),Buffer.from(a)],this.programId)}async initialize(a){let[b]=this.getGlobalConfigPDA();return await this.program.methods.initialize().accounts({globalConfig:b,admin:a.admin,systemProgram:d.SystemProgram.programId}).transaction()}async createTask(a){let[b]=this.getTaskConfigPDA(a.name),[c]=this.getTaskVaultPDA(a.name);return await this.program.methods.createTask(a.name,a.lockedAmount).accounts({taskConfig:b,creator:a.creator,taskVault:c,systemProgram:d.SystemProgram.programId}).transaction()}async submitRewardDistribution(a){let[b]=this.getTaskConfigPDA(a.taskName);return await this.program.methods.submitRewardDistribution(a.taskName,a.recipients,a.amounts).accounts({taskConfig:b,creator:a.creator}).transaction()}async claimReward(a){let[b]=this.getTaskConfigPDA(a.taskName),[c]=this.getTaskVaultPDA(a.taskName);return await this.program.methods.claimReward(a.taskName).accounts({taskConfig:b,taskVault:c,claimer:a.claimer,systemProgram:d.SystemProgram.programId}).transaction()}async getGlobalConfig(){let[a]=this.getGlobalConfigPDA();try{return await this.program.account.globalConfig.fetch(a)}catch{return null}}async getTaskConfig(a){let[b]=this.getTaskConfigPDA(a);try{return await this.program.account.taskConfig.fetch(b)}catch{return null}}getGlobalConfigAddress(){let[a]=this.getGlobalConfigPDA();return a}getTaskConfigAddress(a){let[b]=this.getTaskConfigPDA(a);return b}getTaskVaultAddress(a){let[b]=this.getTaskVaultPDA(a);return b}}b.TaskSDK=e},8565:a=>{"use strict";a.exports=JSON.parse('{"address":"AQehvXopTZuh9qT3jdZ8L1RZumq1eqhmLAM6avWNNJte","metadata":{"name":"squad","version":"0.1.0","spec":"0.1.0","description":"Created with Anchor"},"instructions":[{"name":"claim_token","discriminator":[116,206,27,191,166,19,0,73],"accounts":[{"name":"claimer","writable":true,"signer":true},{"name":"config","writable":true,"pda":{"seeds":[{"kind":"const","value":[67,79,78,70,73,71]},{"kind":"arg","path":"group_name"}]}},{"name":"group_token_mint","writable":true},{"name":"claimer_token_account","writable":true,"pda":{"seeds":[{"kind":"account","path":"claimer"},{"kind":"account","path":"token_program"},{"kind":"account","path":"group_token_mint"}],"program":{"kind":"const","value":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]}}},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"}],"args":[{"name":"group_name","type":"string"}]},{"name":"initialize","discriminator":[175,175,109,31,13,152,155,237],"accounts":[{"name":"fee_and_rent_payer","writable":true,"signer":true},{"name":"main_signing_authority","signer":true},{"name":"config","writable":true,"pda":{"seeds":[{"kind":"const","value":[67,79,78,70,73,71]},{"kind":"arg","path":"name"}]}},{"name":"group_token_mint","writable":true,"pda":{"seeds":[{"kind":"const","value":[103,114,111,117,112,95,116,111,107,101,110]},{"kind":"arg","path":"name"}]}},{"name":"token_program"},{"name":"associated_token_program","address":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},{"name":"system_program","address":"11111111111111111111111111111111"},{"name":"rent","address":"SysvarRent111111111111111111111111111111111"}],"args":[{"name":"name","type":"string"},{"name":"members","type":{"vec":"pubkey"}}]}],"accounts":[{"name":"GroupConfigAccount","discriminator":[161,44,109,29,159,109,42,243]}],"events":[{"name":"InitializeGroupEvent","discriminator":[45,69,172,111,173,156,97,173]}],"errors":[{"code":6000,"name":"InvalidMainSigningAuthority","msg":"Invalid main signing authority"},{"code":6001,"name":"InvalidSigningAuthority","msg":"Invalid signing authority"},{"code":6002,"name":"InvalidBackAuthority","msg":"Invalid back authority"},{"code":6003,"name":"ValueIsZero","msg":"Value is zero"},{"code":6004,"name":"InvalidLength","msg":"Invalid length"},{"code":6005,"name":"InvalidPercentage","msg":"Invalid percentage"},{"code":6006,"name":"InvalidPaymentSupply","msg":"Invalid payment supply"},{"code":6007,"name":"GroupTokenDisable","msg":"Group token disable"},{"code":6008,"name":"UserAccountDisable","msg":"User account disable"},{"code":6009,"name":"UserIndexAccountDisable","msg":"User index account disable"},{"code":6010,"name":"InvalidUserIndex","msg":"Invalid user index"},{"code":6011,"name":"InvalidConvertAmount","msg":"Invalid convert amount"},{"code":6012,"name":"InvalidGenerateAmount","msg":"Invalid generate amount"},{"code":6013,"name":"CannotClaim","msg":"Cannot claim"},{"code":6014,"name":"InvalidTokenAccountAuthority","msg":"Invalid token account authority"},{"code":6015,"name":"InvalidTokenAmountForClaimRequest","msg":"Invalid token amount for claim request"},{"code":6016,"name":"AlreadyClaimed","msg":"Already claimed"},{"code":6017,"name":"NotAGroupMember","msg":"Not a group member"}],"types":[{"name":"GroupConfigAccount","type":{"kind":"struct","fields":[{"name":"last_block_timestamp","docs":["timestamp when account updated"],"type":"i64"},{"name":"name","docs":["group name"],"type":"string"},{"name":"main_signing_authority","docs":["program main signing authority"],"type":"pubkey"},{"name":"members","docs":["group members"],"type":{"vec":"pubkey"}},{"name":"group_token_mint","docs":["group token mint address"],"type":"pubkey"},{"name":"claimed_members","docs":["members who have claimed their tokens"],"type":{"vec":"pubkey"}}]}},{"name":"InitializeGroupEvent","type":{"kind":"struct","fields":[{"name":"timestamp","type":"i64"},{"name":"name","type":"string"},{"name":"members","type":{"vec":"pubkey"}},{"name":"group_token_mint","type":"pubkey"}]}}]}')}};